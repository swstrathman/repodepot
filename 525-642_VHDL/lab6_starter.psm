; *********************************************
; Course: EN.525.642.81.SP23 FPGA Design Using VHDL
; Instructor: Keith Newlander
; Assignment: Lab 6
; File Name: lab6starter.psm
; Name: Scott Strathman
; Description: Assembly file for the Lab 6 calculator
; *********************************************

; *********************************************
;			START SEQUENCE
; *********************************************

; Extra ASM to fix issue with Vivado (see documentation), Skips Address 03
	JUMP cold_start
	JUMP cold_start
	JUMP cold_start
	JUMP cold_start
; Cold Start
cold_start:

; SLIDERS are assigned to PORT 02
; PUSHBTNs are assigned to PORT 03
; PUSHBTN(0) is used to add 1
; PUSHBTN(1) is used to subtract 1
; PUSHBTN(3) is used to reset design

; NOTE: (s# usage):
; s0,s1,s2 - Used in delay subroutines
; s3	-	Stores global register for value to display10
; s4	- 	Stores global register for value to display32
; s5	-	Stores the debounced push btn signal
; s6	-	Debounced register
; s7	-	switches

; *********************************************
;				RESET
; *********************************************

	reset: 	LOAD s3, 00		;reset ALU setpoint to 0
			LOAD s4, 00
			OUTPUT s3, 04	;display reset values
			OUTPUT s4, 05
			LOAD s5, 00
			LOAD s6, 00

			;; wait for btn 3 to be depressed to exit reset state
			INPUT s5, 03
			TEST s5, 08
			JUMP NZ, reset	;stay in reset until 'depressed'
			
; *********************************************
;			MAIN LOOP
; *********************************************

	; START MAIN LOOP
	; DISPLAY CURRENT RESULT
	mainlp:	
		
		; Reset if BTND is high
			INPUT s5, 03
			CALL del10ms
			INPUT s6, 03
			AND s5, s6
			TEST s5, 08
			JUMP NZ, reset
	
		; update displays
			OUTPUT s3, 04
			OUTPUT s4, 05
			
		; check which switch is high (order of precedence)
		; add switch
			INPUT s7, 02
			AND s7, 10 ; mask all switches except add switch(SW4)
			TEST s7, 10
			JUMP NZ, checkAddButton
		; subtract switch
			INPUT s7, 02
			AND s7, 20 ; mask all switches except sub switch(SW5)
			TEST s7, 20
			JUMP NZ, checkSubButton
		
		; start loop again if no switch is high
			JUMP mainlp
		
	
	; CHECK IF BUTTON IS PRESSED FOR EACH OPERATION
	; ELSE, JUMP TO MAINLP
	checkAddButton: CALL testbtnr				
					; Add if BTNR is pressed
					JUMP NZ, opadd
					JUMP mainlp
					
	checkSubButton: CALL testbtnr
					; Subtract if BTNR is pressed
					JUMP NZ, opsub
					JUMP mainlp
	
	; ADD	
	opadd:	INPUT s7, 02
			AND s7, 0F ; get rid of SW7-4 values
			ADD s3, s7 ; add SW3-0 value to output register
			ADDCY s4, 00; check for carry bit and add to output register if high
			; RETURN TO MAIN LOOP AFTER BUTTON IS NO LONGER BEING PUSHED
			CALL opend
			JUMP mainlp
				
	; SUBTRACT
	opsub:	INPUT s7, 02
			AND s7, 0F ; get rid of SW7-4 values
			SUB s3, s7 ; subtract 1 from S3
			SUBCY s4, 00; check for carry bit and add to output register if high
			; RETURN TO MAIN LOOP AFTER BUTTON IS NO LONGER BEING PUSHED
			CALL opend
			JUMP mainlp
	
; *********************************************
;					OPEND
; *********************************************
	; OPEND ROUTINE PREVENTS MUTIPLE OPERATIONS FROM A SINGLE BUTTON PRESS
	opend:	INPUT s5, 03
			TEST s5, 01
			JUMP NZ, opend
			RETURN				

; *********************************************
;			TESTBTNR
; *********************************************
	; STORE, DEBOUNCE, AND TEST BTNR
	testbtnr:
		INPUT s5, 03
		CALL del10ms
		INPUT s6, 03
		AND s5, s6
		; Check if BTNR is pressed
		AND s5, 01
		TEST s5, 01
		RETURN
		
		
; *********************************************
;			CHECK OP BUTTON
; *********************************************
		

; *********************************************
;		HELPER FUNCTIONS FROM TESTPROG
; *********************************************

;(used for delay in top level, added a 10ms delay)
	delms:	INPUT s0,07
	delmslp:	INPUT s1,07
			COMPARE s0,s1
			JUMP Z, delmslp
			RETURN
			
	del10ms:	LOAD s2, F5	;load 245
	del10mslp:	CALL delms
				ADD s2, 01
				JUMP NZ, del10mslp
				RETURN

	del250ms:	LOAD s2, 05
	del250mslp: CALL delms
			ADD s2, 01
			JUMP NZ, del250mslp
			RETURN